---
import { getCollection } from 'astro:content'
import PostCard from './PostCard.astro'

const collection = await getCollection('posts')
const posts = collection.slice(0, 3)
---

<script>
  const slider = document.querySelector('.slider') as HTMLDivElement
  const buttons = document.querySelectorAll(
    '.controls button'
  ) as NodeListOf<HTMLButtonElement>

  buttons.forEach((button, i) => {
    button.addEventListener('click', () => {
      slider.scrollTo({
        left: i * slider.offsetWidth,
        behavior: 'smooth',
      })
    })
  })

  slider.addEventListener('scroll', () => {
    const index = Math.round(slider.scrollLeft / slider.offsetWidth)
    buttons.forEach(button => button.classList.remove('active'))
    buttons[index].classList.add('active')
  })

  buttons[0].classList.add('active')
</script>

<div class='sliderContainer'>
  <div class='slider'>
    {posts.map(post => <PostCard {...post} />)}
  </div>
  <div class='controls'>
    {
      posts.map((_, i) => (
        <button type='button' aria-label={`Go to slide ${i + 1}`}>
          <span />
        </button>
      ))
    }
  </div>
</div>

<style lang='scss'>
  .sliderContainer {
    display: grid;
  }
  .slider {
    --visibles: 1;
    --space: 10px;
    --slide-size: 5px;
    --slide-width: calc(
      (100% - (var(--visibles) - 1) * var(--space)) / var(--visibles)
    );

    display: grid;
    grid: 1fr / auto-flow var(--slide-width);
    grid-gap: var(--space);
    margin: 0;
    overflow-y: hidden;
    scroll-snap-type: x mandatory;

    &::-webkit-scrollbar {
      display: none;
    }
  }

  .controls {
    display: grid;
    grid: 1fr / auto-flow 1fr;
    gap: 1rem;
    margin-top: 0.5rem;
    padding-inline: 1rem;

    button {
      height: 10px;
      background-color: transparent;
      border: none;
      span {
        width: 100%;
        height: 30%;
        background-color: var(--backgroundSlide);
        display: block;
        border-radius: var(--midRadius);
      }
    }
    .active {
      span {
        background-color: var(--backgroundSlideHover);
      }
    }
    @include fold {
      padding-inline: 0;
      grid: 1fr / repeat(3, 40px);
    }
  }
</style>
